{"version":3,"sources":["AccountsTable/AccountsTable.js","AddressInspector/BalanceTable/Tokens.js","AddressInspector/BalanceTable/BalanceTable.js","AddressInspector/AddressInspector.js","App.js","serviceWorker.js","index.js"],"names":["app","AccountsTable","props","data","accounts","forEach","account","supplyAmount","totalEthSupply","toFixed","borrowAmount","totalEthBorrow","ratio","state","ratioDisplay","accountObj","address","supply","borrow","block","blockUpdated","push","columns","Header","accessor","maxWidth","Cell","row","react_default","a","createElement","href","value","target","className","style","color","transition","onClick","targetAccount_","setState","inspected_address","es","defaultPageSize","showPageSizeOptions","Tokens","tokens","symbol","decimals","moneyMarketABI","constant","inputs","name","type","outputs","payable","stateMutability","BalanceTable","balanceType","stateProperty","borrowerAccount","compoundABI","compoundContract","useWeb3Context","web3js","eth","Contract","tokenData","rowData","Borrowed","Supplied","liquidateAsset","asset","assetFetchKey","tokenDecimals","Math","pow","borrow_balances","supply_balances","Object","keys","pending_balances","length","methods","getBorrowBalance","call","error","result","newBalances","amount","getSupplyBalance","checked","asset_repay","asset_collect","onChange","showPagination","sortable","AddressInspector","canLiquidate","AddressInspector_BalanceTable_BalanceTable","disabled","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","refreshAccountList","_this2","AddressInspector_AddressInspector","src","src_AccountsTable_AccountsTable","_this3","axios","method","url","headers","Accept","Content-Type","page_size","page_number","min_borrow_value_in_eth","max_collateral_ratio","then","response","console","log","json","newAccounts","account_values","accountData","total_borrow_value_in_eth","total_supply_value_in_eth","block_updated","ParseAccountDataResponse","catch","Component","Boolean","window","location","hostname","match","rootElement","document","getElementById","ReactDOM","render","dist_default","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53fe4765.chunk.js","sourcesContent":["import React from 'react';\n\n// import { useWeb3Context, useAccountBalance } from 'web3-react/hooks'\n\nimport ReactTable from \"react-table\";\nimport 'react-table/react-table.css'\nimport './AccountsTable.css';\n\nlet app;\n\nfunction InitiateLiquidation(targetAccount_) {\n  // const myAccount = web3.address; // account of liquidator\n  // const targetAccount = targetAccount_; // account in default\n  // const assetBorrow = '...'; // asset target borrowed (in default)\n  // const assetCollateral = '...'; // asset target supplied as collateral\n  // const requestAmountClose = -1;\n\n\n  app.setState({\n    inspected_address : targetAccount_\n  });\n  // var context = useWeb3Context();\n  // window.alert(\"Liquidation coming soon™\");\n  // const moneyMarket = MoneyMarket.at('');\n  // moneyMarket.methods.liquidiate(targetAccount, assetBorrow, assetCollateral, requestAmountClose).send({ from: myAccount }).on('transactionHash', (trxHash) => {\n  //   console.log(`View your liquidation trx at: https://etherscan.io/tx/${trxHash}`);\n  // });\n}\n\nfunction AccountsTable (props) { \n  app = props.app;\n    // const web3 = useWeb3Context()\n    // const balance = useAccountBalance()\n    \n    const data = [];\n    props.accounts.forEach((account) => {\n      var supplyAmount = (account.totalEthSupply / 1e18).toFixed(3);\n      var borrowAmount = (account.totalEthBorrow / 1e18).toFixed(3);\n\n      var ratio = +((supplyAmount / borrowAmount).toFixed(3));\n\n      var minCollateralRatio = 1.55; // 1.5\n      var riskyCollateralRatio = 2;\n\n      var state = \"\";\n\n      if (ratio < minCollateralRatio) {\n        state = \"unsafe\";\n      } else if (ratio <= riskyCollateralRatio) {\n        state = \"risky\";\n      } else {\n        state = \"safe\";\n      }\n\n      var ratioDisplay = (ratio * 100).toFixed(1) + \"%\";\n\n      // var liquidateStatus = (ratio >= minCollateralRatio) ? '0' : '1';\n\n      var accountObj = {\n        address : account.address,\n        supply : supplyAmount,\n        borrow : borrowAmount,\n        ratio : ratioDisplay,\n        state : state,\n        block : account.blockUpdated\n      }\n      data.push(accountObj);\n    });\n\n    const columns = [\n    {\n      Header: \"Address\",\n      accessor : 'address',\n      maxWidth: 750,\n      Cell: row => (\n        <a href={'https://etherscan.io/address/' + row.value} target='_blank'>{row.value}</a>            \n        )\n\n      },\n      {\n        Header: \"Supply\",\n        accessor : 'supply',\n        maxWidth: 200,\n        className: \"right\"\n      },\n      {\n        Header: \"Borrow\",\n        accessor : 'borrow',\n        maxWidth: 200,\n        className: \"right\"\n      },\n      {\n        Header: \"Ratio\",\n        accessor : 'ratio',\n        maxWidth: 200,\n        className: \"right\"\n      },\n      {\n        Header: \"State\",\n        accessor : 'state',\n        maxWidth: 200,\n        Cell: row => (\n        <span>\n        <span style={{\n          color: row.value === 'safe' ? '#57d500' : row.value === 'risky' ? '#ffbf00' : '#ff2e00',\n\n          transition: 'all .3s ease'\n        }}>\n        &#x25cf;\n        </span> {\n          row.value === 'safe' ? 'Safe' : row.value === 'risky' ? 'Risky' : 'Unsafe'\n        }\n        </span>\n        )\n      },\n      {\n        Header: \"\",\n        accessor : 'liquidate',\n        maxWidth: 200,\n        Cell: row => (\n        <button className=\"InspectButton\" \n        onClick={\n          () => InitiateLiquidation(row.row.address)\n        }>Inspect</button>\n        )\n      }\n      ];\n\n      var showPageSizeOptions = false;\n      var defaultPageSize = 20;\n\n      var minRows = defaultPageSize;\n\n      return (\n      <ReactTable \n      data={data}\n      columns={columns}\n      defaultPageSize={defaultPageSize}\n      showPageSizeOptions={showPageSizeOptions}\n      className=\"-striped\"           \n      />\n      \n      )\n    }\n\n    export default AccountsTable; ","export default { \n  tokens : [\n\t\t{\t\t\n      \t\t\"symbol\" : \"WETH\",\n      \t\t\"address\" : \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n      \t\t\"decimals\" : 18\n      \t},\n      \t{\t\t\n      \t\t\"symbol\" : \"DAI\",\n      \t\t\"address\" : \"0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359\",\n      \t\t\"decimals\" : 18\n      \t},\n      \t{\t\t\n      \t\t\"symbol\" : \"BAT\",\n      \t\t\"address\" : \"0x0D8775F648430679A709E98d2b0Cb6250d2887EF\",\n      \t\t\"decimals\" : 18\n      \t},\n      \t{\t\t\n      \t\t\"symbol\" : \"ZRX\",\n      \t\t\"address\" : \"0xE41d2489571d322189246DaFA5ebDe1F4699F498\",\n      \t\t\"decimals\" : 18\n      \t},\n      \t{\t\t\n      \t\t\"symbol\" : \"REP\",\n      \t\t\"address\" : \"0x1985365e9f78359a9B6AD760e32412f4a445E862\",\n      \t\t\"decimals\" : 18   \n      \t}\n  ],\n  moneyMarketABI : [\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"asset\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getBorrowBalance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"asset\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"borrow\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"asset\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"assetPrices\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"calculateAccountValues\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"asset\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"repayBorrow\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"collateralRatio\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"asset\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getSupplyBalance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"collateralMarkets\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"asset\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"supply\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"asset\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"requestedAmount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"withdraw\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t}\n]\n}","import React from 'react';\n\nimport ReactTable from \"react-table\";\n\nimport \"./BalanceTable.css\"\nimport Tokens from \"./Tokens.js\";\n\nimport { useWeb3Context/*, useAccountBalance */} from 'web3-react/hooks'\n\nfunction BalanceTable (props) { \n  let app = props.app;\n\n  var balanceType = props.balanceType;\n  var stateProperty = props.stateProperty;\n  var borrowerAccount = app.state.inspected_address;\n\n  var data = [];\n\n  var compoundAddress = \"0x3FDA67f7583380E67ef93072294a7fAc882FD7E7\";\n  var compoundABI = Tokens.moneyMarketABI;\n  \n\n  \n  var web3 = useWeb3Context();\n  var compoundContract = new web3.web3js.eth.Contract(compoundABI, compoundAddress);\n  \n  Tokens.tokens.forEach((tokenData) => {\n\n    var rowData = {\n      symbol : tokenData.symbol,\n      address : tokenData.address,\n      Borrowed : \"loading balance...\",\n      Supplied : \"loading balance...\",\n      liquidateAsset : tokenData.symbol\n    };\n\n    var asset = tokenData.address;\n    var assetFetchKey = asset+balanceType;\n\n    var tokenDecimals = Math.pow(10, tokenData.decimals);\n\n    if ((balanceType === 'Borrowed') && (asset in app.state.borrow_balances)) {\n      rowData.Borrowed = app.state.borrow_balances[asset];\n    } else if ((balanceType === 'Supplied') && (asset in app.state.supply_balances)) {\n      rowData.Supplied = app.state.supply_balances[asset];\n    } else if (Object.keys(app.state.pending_balances).length > 0) {      \n      // don't re-fetch an asset if we're already fetching one  \n    } else {      \n      app.state.pending_balances[assetFetchKey] = 0;\n\n      // console.log(Object.keys(app.state.pending_balances).length + \" <\");\n      \n      if (balanceType === 'Borrowed') {\n        compoundContract.methods.getBorrowBalance(borrowerAccount, asset).call(function(error, result) {          \n          delete app.state.pending_balances[assetFetchKey];\n\n          if (error === null) {\n            var newBalances = app.state.borrow_balances;\n\n            var amount = ((result > 0) ? result / tokenDecimals : 0).toFixed(3);\n            if (amount == 0) {\n              amount = \"0\";\n            }\n      \n            newBalances[asset] = amount;\n\n            app.setState({\n              borrow_balances : newBalances\n            });\n          } else {\n            app.setState({});\n          }\n        });      \n      } else {\n        compoundContract.methods.getSupplyBalance(borrowerAccount, asset).call(function(error, result) {\n          delete app.state.pending_balances[assetFetchKey];\n\n          if (error === null) {\n            var newBalances = app.state.supply_balances;\n\n            var amount = ((result > 0) ? result / tokenDecimals : 0).toFixed(3);          \n            if (amount == 0) {\n              amount = \"0\";\n            }\n      \n            newBalances[asset] = amount;\n\n            app.setState({\n              supply_balances : newBalances\n            });\n          } else {\n            app.setState({});\n          }\n        });\n      }\n    }\n\n    data.push(rowData);\n    \n    // moneyMarket.methods.getSupplyBalance(account, asset).call().then((supplyBalance) => {\n    //   console.log(`Account ${account} has ${supplyBalance} supply balance of ${asset}`);\n    // });\n  });\n\n  // data.push({\n  //   symbol : \"WETH\",\n  //   address : \"0x334343\",\n  //   borrowed : 0.343,\n  //   collateral : 0.555,\n  //   liquidateAsset : \"WETH\"\n  // })\n\n  // data.push({\n  //   symbol : \"DAI\",\n  //   address : \"0x334343\",\n  //   borrowed : 0.343,\n  //   collateral : 0.555,\n  //   liquidateAsset : \"DAI\"\n  // })\n\n  // data.push({\n  //   symbol : \"BAT\",\n  //   address : \"0x334343\",\n  //   borrowed : 0.343,\n  //   collateral : 0.555,\n  //   liquidateAsset : \"BAT\"\n  // })\n\n  // data.push({\n  //   symbol : \"ZRX\",\n  //   address : \"0x334343\",\n  //   borrowed : 0.343,\n  //   collateral : 0.555,\n  //   liquidateAsset : \"ZRX\"\n  // })\n\n  // data.push({\n  //   symbol : \"REP\",\n  //   address : \"0x334343\",\n  //   borrowed : 0.343,\n  //   collateral : 0.555,\n  //   liquidateAsset : \"REP\"\n  // })\n\n  var columns = [\n  {\n    Header: \"Symbol\",\n    accessor : 'symbol',\n    maxWidth: 200,\n    \n  },{\n    Header: \"Address\",\n    accessor : 'address',\n    Cell: row => (\n      <a href={'https://etherscan.io/address/' + row.value} target='_blank'>{row.value}</a>            \n      )\n    },\n    {\n      Header: balanceType,\n      accessor : balanceType,\n      maxWidth: 200,\n        className: \"right\"\n    },\n    {\n      Header: \"\",\n      accessor : 'liquidateAsset',\n      maxWidth: 100,\n      Cell: row => (\n        <input type=\"radio\" checked={app.state[stateProperty] === row.value}\n        onClick={\n          () => {\n            if (stateProperty === 'asset_repay') {\n              app.setState({\n                asset_repay : row.value\n              });\n            } else {\n              app.setState({\n                asset_collect : row.value\n              });\n            }\n          }\n        }\n        onChange={\n          () => {\n\n          }\n        }\n        />\n        )\n    }\n    ];\n\n    return (\n      <ReactTable \n      data={data}\n      columns={columns}\n      showPagination={false}\n      sortable={false}\n      className=\"AddressInspectorTable\"\n      defaultPageSize={data.length}\n      />\n\n    )\n  }\n\n  export default BalanceTable; ","import React from 'react';\n\n// import { useWeb3Context, useAccountBalance } from 'web3-react/hooks'\n\nimport ReactTable from \"react-table\";\nimport BalanceTable from \"./BalanceTable/BalanceTable.js\"\n\nimport 'react-table/react-table.css'\n\nlet app;\n\nfunction AddressInspector (props) { \n    app = props.app;\n\n    var canLiquidate = false;\n\n    // only enable liquidate button if both asset to repay and collect have been set\n    if ((app.state.asset_repay.length > 0) && (app.state.asset_collect.length > 0)) {\n      canLiquidate = true;\n    }\n\n    return (\n      <div>        \n        <p>Choose an asset to receive at discount:</p>\n        <BalanceTable app={app} balanceType=\"Supplied\" stateProperty=\"asset_collect\"/>        \n\n        <p>Choose an asset to repay:</p>\n        <BalanceTable app={app} balanceType=\"Borrowed\" stateProperty=\"asset_repay\"/>\n        <br/>\n\n        <button className=\"LiquidateButton\" disabled={!canLiquidate}>Liquidate</button>\n      </div>\n\n    )\n  }\n\n  export default AddressInspector; ","import React, { Component } from 'react';\n\nimport AccountsTable from './AccountsTable/AccountsTable.js';\nimport AddressInspector from './AddressInspector/AddressInspector.js';\n\nimport axios from 'axios'\n\n// import { useWeb3Context, useAccountBalance } from 'web3-react/hooks'\n\nimport './App.css';\n\nimport sampleJson from './samplejson.json'\n\nfunction GoBackFromAddressInspector(app) {\n\tapp.setState({\n\t\tinspected_address : \"\",\n\t\t\n\t\tborrow_balances : {},\n\t\tsupply_balances : {},\n\n\t\tpending_balances : {}, // what we're currently fetching\n\n\t\tasset_repay : \"\",\n\t\tasset_collect : \"\"\n\n\t});\n}\n\nfunction ParseAccountDataResponse(json, app) {\n\tvar newAccounts = [];\n\n\tjson.account_values.forEach((accountData) => {\n\t\tvar account = {\n\t\t\taddress : accountData.address,\n\n\t\t\ttotalEthBorrow : accountData.total_borrow_value_in_eth.value,\n\n\t\t\ttotalEthSupply : accountData.total_supply_value_in_eth.value,\n\n\t\t\tblockUpdated : accountData.block_updated\n\t\t}\n\t\tnewAccounts.push(account);\n\t});\n\n\tapp.setState({\n\t\taccounts : newAccounts\n\t});\n}\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\taccounts : [],\n\t\t\t\n\t\t\tinspected_address : \"\",\n\t\t\tborrow_balances : {},\n\t\t\tsupply_balances : {},\n\t\t\tpending_balances : {},\n\n\t\t\tasset_repay : \"\",\n\t\t\tasset_collect : \"\"\n\t\t};\n\t}\n\n\tcomponentDidMount() {\t\t\n\t\tif (this.state.accounts.length == 0) {\n\t\t\tthis.refreshAccountList()\n\t\t}\n\t}\n\n\trender() {\t\t\n\t\tif (this.state.inspected_address.length > 0) {\n\t\t\treturn (\n\t\t\t\t<div className=\"AddressInspector\">\n\t\t\t\t<button onClick={() => GoBackFromAddressInspector(this)}>Back</button>\n\t\t\t\t\t<b>Account: {this.state.inspected_address}</b>\n\t\t\t\t\t<AddressInspector app={this}/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\tif (this.state.accounts.length == 0) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src=\"./loading.gif\" className=\"Loading\"/>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\t\t\t\n\t\t\t\t\t<div className=\"AccountsTable\">\n\t\t\t\t\t\t<b>Compound Accounts</b>\n\t\t\t\t\t\t<AccountsTable accounts={this.state.accounts} app={this}/>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\n\trefreshAccountList () {\n\t\t// ParseAccountDataResponse(sampleJson, this);\n\t\n\t\tvar URL = 'https://api.compound.finance/api/risk/v1/get_account_values';\n\n\t\taxios({\n\t\t\tmethod: 'post',\n\t\t\turl: URL,\n\t\t\theaders : {\n\t\t\t\t'Accept' : 'application/json',\n\t\t\t\t'Content-Type' : 'application/json'\n\t\t\t\t// ,'compound-api-key' : 'xxx'\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\t'page_size' : 100,\n\t\t\t\t'page_number' : 1,\n\t\t\t\t'min_borrow_value_in_eth' : {\n\t\t\t\t\t'value' : '50000000000000000'\n\t\t\t\t},\n\t\t\t\t'max_collateral_ratio' : {\n\t\t\t\t\t'value' : '5'\n\t\t\t\t}\n\t\t\t}\n\t\t}).then(response => {\n\t\t\tconsole.log(response);\n\t\t\t\n\t\t\tParseAccountDataResponse(response.data, this);\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Web3Provider from 'web3-react'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nfunction AppWrapper () {\n  return (  \t\n    <Web3Provider>\n      <App/>\n    </Web3Provider>\n  )\n}\n\nconst rootElement = document.getElementById(\"root\")\nReactDOM.render(<AppWrapper />, rootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}